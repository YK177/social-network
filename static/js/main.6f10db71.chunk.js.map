{"version":3,"sources":["components/Sidebar/NavBar/NavBar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/UserInfo/UserInfo.module.css","components/Sidebar/Friends/Friend/Friend.module.css","components/Users/User/User.module.css","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Sidebar/Friends/Friends.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/common/AddItemForm/AddItemForm.module.css","components/Users/Pagination/Pagination.module.css","components/Header/Header.module.css","components/Sidebar/SideBar.module.css","components/Footer/Footer.module.css","components/common/Preloader/Preloader.module.css","reportWebVitals.ts","components/Sidebar/NavBar/NavBar.tsx","components/Sidebar/Friends/Friend/Friend.tsx","components/Sidebar/Friends/FriendsContainer.tsx","components/Sidebar/Friends/Friends.tsx","components/Sidebar/SideBar.tsx","components/Footer/Footer.tsx","components/Settings/Settings.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/common/AddItemForm/AddItemForm.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","api/api.ts","redux/users-reducer.ts","assets/images/user.jpg","components/Users/User/User.tsx","components/Users/Users.tsx","assets/images/spinner.svg","components/common/Preloader/Preloader.tsx","components/Users/Pagination/Pagination.tsx","components/Users/UsersContainer.tsx","components/Profile/UserInfo/UserInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostContainer.tsx","components/Profile/MyPosts/MyPost.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","Routes.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","App.tsx","redux/sidebar-reducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","className","s","nav","list","to","link","activeClassName","active","Friend","friend","path","id","avatar","src","alt","name","item","firstName","lastName","FriendsContainer","connect","state","data","sideBar","friends","mappedFriends","map","f","container","title","SideBar","body","Footer","Settings","DialogItem","dialog","Message","messageClass","kindOfMessage","outgoing","incoming","massage","text","AddItemForm","value","addItem","updateText","children","textarea","placeholder","onChange","e","currentTarget","btn_wrapper","onClick","initialState","newMessageText","dialogs","messages","dialogsReducer","action","type","Date","getTime","newText","DialogsContainer","dialogsPage","addMassage","updateNewMessageText","dialogsItems","d","messageBlock","massages","m","instance","axios","create","baseURL","headers","withCredentials","usersAPI","currentPage","pageSize","get","response","userId","post","delete","authAPI","profileAPI","users","totalUsersCount","isFetching","toggleIsFetching","toggleFollowingProgress","followingInProgress","usersReducer","user","followed","totalCount","User","followUser","unfollowUser","photos","small","info","status","disabled","Users","Preloader","preloader","spinner","Pagination","onPageChanged","pagesCount","Math","ceil","pages","i","push","length","pagination","page","selected","UsersContainer","props","setCurrentPage","getUsers","onFollowUser","follow","onUnfollowUser","unfollow","this","usersPage","React","Component","dispatch","items","resultCode","UserInfo","profile","background","fullName","username","birthday","lookingForAJob","address","lookingForAJobDescription","about","aboutMe","newPostText","posts","lastSeen","comment","likeCounter","shareCounter","profileReducer","Post","alt_message","top","testimonials","MyPostContainer","profilePage","addPost","updateNewPostText","postsElements","p","Profile","ProfileContainer","match","params","getUserProfile","WithUrlDataContainer","withRouter","Routes","exact","render","Header","logo","isAuth","login","email","authReducer","HeaderContainer","authUserData","auth","setAuthUserData","App","sidebarReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f10db71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__15vVy\",\"list\":\"NavBar_list__k-6nN\",\"link\":\"NavBar_link__3eZxz\",\"active\":\"NavBar_active__1H6Ly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alt_message\":\"Post_alt_message__3YnyQ\",\"container\":\"Post_container__3_jv6\",\"top\":\"Post_top__1ETdc\",\"avatar\":\"Post_avatar__38Hrd\",\"info\":\"Post_info__2dZAf\",\"body\":\"Post_body__GR1wI\",\"comment\":\"Post_comment__Y_ZKU\",\"testimonials\":\"Post_testimonials__x_hVB\",\"item\":\"Post_item__124y_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"UserInfo_background__1GgVr\",\"container\":\"UserInfo_container__3MxlX\",\"avatar\":\"UserInfo_avatar__1NgcW\",\"body\":\"UserInfo_body__3U_r_\",\"username\":\"UserInfo_username__Cdepl\",\"birthday\":\"UserInfo_birthday__3Ly_z\",\"address\":\"UserInfo_address__1IuyT\",\"about\":\"UserInfo_about__SDoFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__GqMSk\",\"avatar\":\"Friend_avatar__1qP9y\",\"item\":\"Friend_item__3s5qz\",\"name\":\"Friend_name__dRw1l\",\"active\":\"Friend_active__3MfZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1Brf0\",\"avatar\":\"User_avatar__1zU6E\",\"info\":\"User_info__j8ELz\",\"name\":\"User_name__3ccJm\",\"status\":\"User_status__cAyCQ\",\"btn_wrapper\":\"User_btn_wrapper__1anWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__1IYW0\",\"dialogsItems\":\"Dialogs_dialogsItems__3-Gpz\",\"messageBlock\":\"Dialogs_messageBlock__3jvVF\",\"massages\":\"Dialogs_massages__3HOkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__3dU-J\",\"users\":\"Users_users__1TG2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Friends_container__3VRsO\",\"title\":\"Friends_title__1Nu3M\",\"friends\":\"Friends_friends__5XRzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1aoXs\",\"active\":\"DialogItem_active__37vZU\",\"avatar\":\"DialogItem_avatar__57A47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"massage\":\"Message_massage__2S7Mq\",\"outgoing\":\"Message_outgoing__384Rj\",\"incoming\":\"Message_incoming__2jO4i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"AddItemForm_body__3mh_u\",\"textarea\":\"AddItemForm_textarea__3DfWo\",\"btn_wrapper\":\"AddItemForm_btn_wrapper__vfH6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__3hy4e\",\"page\":\"Pagination_page__2YsrK\",\"selected\":\"Pagination_selected__2mw3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Header_body__s8Yd_\",\"logo\":\"Header_logo__mXrnZ\",\"login\":\"Header_login__1FXNo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SideBar_body__3XCaW\",\"friends\":\"SideBar_friends__3VeXe\",\"friend\":\"SideBar_friend__1tf_X\",\"avatar\":\"SideBar_avatar__2LCPQ\",\"name\":\"SideBar_name__1MqGm\",\"active\":\"SideBar_active__33IAJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Footer_body__2NQhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__PuuWo\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import s from './NavBar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul className={s.list}>\r\n                <li><NavLink to={'/profile'} className={s.link} activeClassName={s.active}>Profile</NavLink></li>\r\n                <li><NavLink to={'/dialogs'} className={s.link} activeClassName={s.active}>Dialogs</NavLink></li>\r\n                <li><NavLink to={'/users'} className={s.link} activeClassName={s.active}>Users</NavLink></li>\r\n                <li><NavLink to={'/settings'} className={s.link} activeClassName={s.active}>Settings</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import {NavLink} from 'react-router-dom'\r\nimport s from './Friend.module.css'\r\nimport React from 'react'\r\nimport {FriendType} from '../../../../redux/sidebar-reducer'\r\n\r\ntype FriendPropsType = {\r\n    friend: FriendType\r\n}\r\n\r\nexport const Friend: React.FC<FriendPropsType> = ({friend}) => {\r\n    let path = `/my-friends/${friend.id}`\r\n\r\n    return (\r\n        <NavLink to={path} className={s.friend} activeClassName={s.active}>\r\n            <div className={s.avatar}>\r\n                <img\r\n                    src={friend.avatar}\r\n                    alt=\"avatar\"/>\r\n            </div>\r\n            <div className={s.name}>\r\n                <span className={s.item}>{friend.firstName}</span>\r\n                <span className={s.item}>{friend.lastName}</span>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}","import {connect} from 'react-redux'\r\nimport {Friends} from './Friends'\r\nimport {FriendType} from '../../../redux/sidebar-reducer'\r\nimport {AppStateType} from '../../../redux/store'\r\n\r\ntype MapStatePropsType = {\r\n    data: FriendType[]\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.sideBar.friends\r\n    }\r\n}\r\n\r\nexport const FriendsContainer = connect(mapStateToProps)(Friends)\r\n\r\n\r\n","import s from './Friends.module.css'\r\nimport React from 'react'\r\nimport {Friend} from './Friend/Friend'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {FriendType} from '../../../redux/sidebar-reducer'\r\n\r\ntype FriendsPropsType = {\r\n    data: FriendType[]\r\n}\r\n\r\nexport const Friends: React.FC<FriendsPropsType> = ({data}) => {\r\n\r\n    const mappedFriends = data.map(f => (\r\n        <Friend\r\n            key={f.id}\r\n            friend={f}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <NavLink to={'/my-friends/'} className={s.title}>My Friends</NavLink>\r\n            <div className={s.friends}>\r\n                {mappedFriends}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './SideBar.module.css'\r\nimport {NavBar} from './NavBar/NavBar'\r\nimport {FriendsContainer} from './Friends/FriendsContainer'\r\n\r\n\r\nexport const SideBar = () => {\r\n    return (\r\n        <div className={s.body}>\r\n            <NavBar/>\r\n            <FriendsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Footer.module.css'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className={s.body}>\r\n            <p>&copy;All rights reserved, 2021</p>\r\n        </footer>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import {NavLink} from 'react-router-dom'\r\nimport s from './DialogItem.module.css'\r\nimport React from 'react'\r\nimport {DialogType} from '../../../redux/dialogs-reducer'\r\n\r\n\r\ntype DialogItemPropsType = {\r\n    data: DialogType\r\n}\r\n\r\n\r\nexport const DialogItem: React.FC<DialogItemPropsType> = ({data}) => {\r\n\r\n    let path = `/dialogs/${data.id}`\r\n\r\n    return (\r\n        <NavLink to={path} className={s.dialog} activeClassName={s.active}>\r\n            <div className={s.avatar}>\r\n                <img\r\n                    src={data.avatar}\r\n                    alt=\"avatar\"/>\r\n            </div>\r\n            <p>{data.name}</p>\r\n        </NavLink>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Message.module.css'\r\nimport {MessageType} from '../../../redux/dialogs-reducer'\r\n\r\ntype MessagePropsType = {\r\n    data: MessageType\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = ({data}) => {\r\n\r\n    let messageClass;\r\n    (data.kindOfMessage === 'outgoing')\r\n        ? (messageClass = s.outgoing)\r\n        : (messageClass = s.incoming)\r\n\r\n    return (\r\n        <div className={`${s.massage} ${messageClass}`}>\r\n            <p>{data.text}</p>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react'\r\nimport s from './AddItemForm.module.css'\r\n\r\ntype AddItemFormPropsType = {\r\n    value: string\r\n    addItem: () => void\r\n    updateText: (text: string) => void\r\n}\r\n\r\nexport const AddItemForm: React.FC<AddItemFormPropsType> = ({value, addItem, updateText, children}) => {\r\n\r\n    const onClickHandler = () => addItem()\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        updateText(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <textarea\r\n                className={s.textarea}\r\n                placeholder={'Say something...'}\r\n                onChange={onChangeHandler}\r\n                value={value}/>\r\n            <div className={s.btn_wrapper}>\r\n                <button onClick={onClickHandler} className={'btn'}>{children}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export type DialogType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    text: string\r\n    kindOfMessage: string\r\n}\r\nexport type DialogsPageType = typeof initialState\r\n\r\nconst initialState = {\r\n    newMessageText: '',\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Albert Herrera',\r\n            avatar: 'https://images.generated.photos/kz5RXoqT5RQbMcwPce2BB61EmJeCgg_nnSYufYvII-0/rs:fit:512:512/wm:0.95:sowe:18:18:0.33/czM6Ly9pY29uczgu/Z3Bob3Rvcy1wcm9k/LnBob3Rvcy92M18w/MjgzNTA0LmpwZw.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Natsuki Minako',\r\n            avatar: 'https://imgproxy.generated.photos/DAdtlihSCyxITsXjf3_1k54Ueyq3FJYnxQiiqXinCF0/rs:fit:512:512/wm:0.95:sowe:18:18:0.33/czM6Ly9pY29uczgu/Z3Bob3Rvcy1wcm9k/LnBob3Rvcy90cmFu/c3BhcmVudF92My92/M18wNTQzNzAzLnBu/Zw.png'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Bryan O\\'Ryan',\r\n            avatar: 'https://imgproxy.generated.photos/sk_shJ-TA6ctVuqGtL7M_TkH5ACrWQ7CYr9GcPnQHS0/rs:fit:512:512/wm:0.95:sowe:18:18:0.33/czM6Ly9pY29uczgu/Z3Bob3Rvcy1wcm9k/LnBob3Rvcy90cmFu/c3BhcmVudF92My92/M18wNTYyMDg0LnBu/Zw.png'\r\n        }\r\n    ] as DialogType[],\r\n    messages: [\r\n        {id: 1, text: 'Hi! How are you? Where are you disappeared?', kindOfMessage: 'outgoing'},\r\n        {id: 2, text: 'Hi! I\\'m OK...', kindOfMessage: 'incoming'},\r\n        {\r\n            id: 3,\r\n            text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur, eos voluptates. Culpa\\n' +\r\n                'dolorem dolores, iusto nisi numquam officiis placeat soluta! A accusamus accusantium alias\\n' +\r\n                'asperiores at consectetur corporis est facere illum, impedit ipsam iure labore magnam modi natus\\n' +\r\n                'nisi optio placeat praesentium quasi quidem reiciendis rerum veniam vitae voluptates\\n' +\r\n                'voluptatibus.',\r\n            kindOfMessage: 'incoming'\r\n        },\r\n        {\r\n            id: 4,\r\n            text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur, eos voluptates. Culpa\\n' +\r\n                'dolorem dolores, iusto nisi numquam officiis placeat soluta! A accusamus accusantium alias\\n' +\r\n                'asperiores at consectetur corporis est facere illum, impedit ipsam iure labore magnam modi natus\\n' +\r\n                'nisi optio placeat praesentium quasi quidem reiciendis rerum veniam vitae voluptates\\n voluptatibus.',\r\n            kindOfMessage: 'outgoing'\r\n        },\r\n    ] as MessageType[]\r\n}\r\n\r\nconst dialogsReducer = (state: DialogsPageType = initialState, action: ActionType): DialogsPageType => {\r\n    switch (action.type) {\r\n        case 'ADD-MASSAGE': {\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    {\r\n                        id: new Date().getTime(),\r\n                        text: state.newMessageText,\r\n                        kindOfMessage: 'outgoing'\r\n                    }\r\n                ],\r\n                newMessageText: ''\r\n            }\r\n        }\r\n        case 'UPDATE-NEW-MESSAGE-TEXT': {\r\n            return {...state, newMessageText: action.newText}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addMassage> | ReturnType<typeof updateNewMessageText>\r\n\r\nexport const addMassage = () => {\r\n    return {\r\n        type: 'ADD-MASSAGE'\r\n    } as const\r\n}\r\n\r\nexport const updateNewMessageText = (newText: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-MESSAGE-TEXT',\r\n        newText\r\n    } as const\r\n}\r\n\r\nexport default dialogsReducer","import {Dialogs} from './Dialogs'\r\nimport {addMassage, DialogsPageType, updateNewMessageText} from '../../redux/dialogs-reducer'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../redux/store'\r\n\r\ntype MapStatePropsType = {\r\n    data: DialogsPageType\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, {\r\n    addMassage,\r\n    updateNewMessageText,\r\n})(Dialogs)","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from './DialogItem/DialogItem'\r\nimport {DialogsPageType} from '../../redux/dialogs-reducer'\r\nimport {Message} from './Message/Message'\r\nimport {AddItemForm} from '../common/AddItemForm/AddItemForm'\r\n\r\ntype DialogsPropsType = {\r\n    data: DialogsPageType\r\n    addMassage: () => void\r\n    updateNewMessageText: (text: string) => void\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = ({data, addMassage, updateNewMessageText}) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.dialogsItems}>\r\n                {data.dialogs.map(d => (\r\n                    <DialogItem key={d.id} data={d}/>)\r\n                )}\r\n            </div>\r\n            <div className={s.messageBlock}>\r\n                <div className={s.massages}>\r\n                    {data.messages.map(m => (\r\n                        <Message key={m.id} data={m}/>)\r\n                    )}\r\n                </div>\r\n                <AddItemForm\r\n                    value={data.newMessageText}\r\n                    addItem={addMassage}\r\n                    updateText={updateNewMessageText}\r\n                >Send</AddItemForm>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'b44c493a-a90f-4242-9a95-17cc58fddd62',\r\n    },\r\n    withCredentials: true,\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance\r\n            .get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    followUser(userId: number) {\r\n        return instance\r\n            .post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollowUser(userId: number) {\r\n        return instance\r\n            .delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance\r\n            .get('auth/me')\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: string) {\r\n        return instance\r\n            .get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n}","import {Dispatch} from 'redux'\r\nimport {usersAPI} from '../api/api'\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    status: string\r\n    followed: boolean\r\n    followingInProgress: boolean\r\n}\r\n\r\nexport type UsersPageType = typeof initialState\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n}\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: ActionType): UsersPageType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW-USER':\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(user => user.id === action.userId\r\n                        ? {...user, followed: true}\r\n                        : user)\r\n            }\r\n        case 'UNFOLLOW-USER':\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(user => user.id === action.userId\r\n                        ? {...user, followed: false}\r\n                        : user)\r\n            }\r\n        case 'SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users.map(user => (\r\n                    {\r\n                        ...user, followingInProgress: false\r\n                    }))\r\n            }\r\n        case 'SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'TOGGLE-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state,\r\n                users: state.users\r\n                    .map(user => user.id === action.userId\r\n                        ? {...user, followingInProgress: action.followingInProgress}\r\n                        : user)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof followUser>\r\n    | ReturnType<typeof unfollowUser>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\n\r\nexport const followUser = (userId: number) => {\r\n    return {\r\n        type: 'FOLLOW-USER',\r\n        userId,\r\n    } as const\r\n}\r\n\r\nexport const unfollowUser = (userId: number) => {\r\n    return {\r\n        type: 'UNFOLLOW-USER',\r\n        userId,\r\n    } as const\r\n}\r\n\r\nexport const setUsers = (users: UserType[]) => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users,\r\n    } as const\r\n}\r\n\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: 'SET-CURRENT-PAGE',\r\n        currentPage,\r\n    } as const\r\n}\r\n\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: 'SET-TOTAL-USERS-COUNT',\r\n        totalCount,\r\n    } as const\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-FETCHING',\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\nexport const toggleFollowingProgress = (userId: number, followingInProgress: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-FOLLOWING-PROGRESS',\r\n        followingInProgress,\r\n        userId,\r\n    } as const\r\n}\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    usersAPI\r\n        .getUsers(currentPage, pageSize)\r\n        .then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n}\r\n\r\nexport const follow = (userId: number) => (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgress(userId, true))\r\n    usersAPI\r\n        .followUser(userId)\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(followUser(userId))\r\n                dispatch(toggleFollowingProgress(userId, false))\r\n            }\r\n        })\r\n}\r\n\r\nexport const unfollow = (userId: number) => (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgress(userId, true))\r\n    usersAPI\r\n        .unfollowUser(userId)\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowUser(userId))\r\n                dispatch(toggleFollowingProgress(userId, false))\r\n            }\r\n        })\r\n}\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/user.3911aaec.jpg\";","import {UserType} from '../../../redux/users-reducer'\r\nimport React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport avatar from '../../../assets/images/user.jpg'\r\nimport s from './User.module.css'\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followUser: (userID: number) => void\r\n    unfollowUser: (userID: number) => void\r\n}\r\nexport const User: React.FC<UserPropsType> = ({user, followUser, unfollowUser}) => {\r\n\r\n    const onFollowHandler = () => {\r\n        followUser(user.id)\r\n    }\r\n\r\n    const onUnfollowHandler = () => {\r\n        unfollowUser(user.id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <NavLink to={'/profile/' + user.id}>\r\n                <div className={s.avatar}>\r\n                    <img\r\n                        src={user.photos.small || avatar}\r\n                        alt={user.name}/>\r\n                </div>\r\n            </NavLink>\r\n            <div className={s.info}>\r\n                <p className={s.name}>{user.name}</p>\r\n                <p className={s.status}>{user.status}</p>\r\n                <div className={s.btn_wrapper}>\r\n                    {\r\n                        user.followed\r\n                            ? (<button className={`btn ${user.followingInProgress && 'disabled'}`}\r\n                                       disabled={user.followingInProgress}\r\n                                       onClick={onUnfollowHandler}>\r\n                                Unfollow\r\n                            </button>)\r\n                            : (<button className={`btn ${user.followingInProgress && 'disabled'}`}\r\n                                       disabled={user.followingInProgress}\r\n                                       onClick={onFollowHandler}>\r\n                                Follow\r\n                            </button>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {UserType} from '../../redux/users-reducer'\r\nimport React from 'react'\r\nimport s from './Users.module.css'\r\nimport {User} from './User/User'\r\n\r\ntype UsersPropsType = {\r\n    users: UserType[]\r\n    followUser: (userID: number) => void\r\n    unfollowUser: (userID: number) => void\r\n}\r\nexport const Users: React.FC<UsersPropsType> = ({\r\n                                                    users,\r\n                                                    followUser,\r\n                                                    unfollowUser,\r\n                                                }) => {\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            {\r\n                users.map(user => {\r\n                    return (\r\n                        <User key={user.id}\r\n                              user={user}\r\n                              followUser={followUser}\r\n                              unfollowUser={unfollowUser}\r\n                        />\r\n                    )\r\n                })\r\n            }</div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/spinner.9d54c1ab.svg\";","import React from 'react'\r\nimport spinner from '../../../assets/images/spinner.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={spinner} alt=\"loading\"/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Pagination.module.css'\r\n\r\ntype PaginationPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (page: number) => void\r\n}\r\nexport const Pagination: React.FC<PaginationPropsType> = ({\r\n                                                              totalUsersCount,\r\n                                                              pageSize,\r\n                                                              currentPage,\r\n                                                              onPageChanged,\r\n                                                          }) => {\r\n\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    const pages = []\r\n    if (currentPage >= 1 && currentPage <= 5) {\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n            if (pages.length === 10) break\r\n        }\r\n    }\r\n    if (currentPage > 5) {\r\n        for (let i = currentPage - 4; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n            if (pages.length === 10) break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n            {\r\n                pages.map(page => {\r\n                    return (\r\n                        <div key={page} className={s.page}>\r\n                            <button\r\n                                onClick={() => onPageChanged(page)}\r\n                                className={`btn ${page === currentPage && s.selected}`}\r\n                            >\r\n                                {page}\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux'\r\nimport {AppStateType} from '../../redux/store'\r\nimport {follow, getUsers, setCurrentPage, unfollow, UserType} from '../../redux/users-reducer'\r\nimport React from 'react'\r\nimport {Users} from './Users'\r\nimport {Preloader} from '../common/Preloader/Preloader'\r\nimport s from './Users.module.css'\r\nimport {Pagination} from './Pagination/Pagination'\r\n\r\ntype MapStatePropsType = {\r\n    users: UserType[]\r\n    currentPage: number\r\n    pageSize: number,\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setCurrentPage: (currentPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\ntype UsersContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (page: number) => {\r\n        this.props.setCurrentPage(page)\r\n        this.props.getUsers(page, this.props.pageSize)\r\n    }\r\n\r\n    onFollowUser = (userId: number) => {\r\n        this.props.follow(userId)\r\n    }\r\n\r\n    onUnfollowUser = (userId: number) => {\r\n        this.props.unfollow(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.usersPage}>\r\n                <Pagination totalUsersCount={this.props.totalUsersCount}\r\n                            pageSize={this.props.pageSize}\r\n                            currentPage={this.props.currentPage}\r\n                            onPageChanged={this.onPageChanged}/>\r\n                {\r\n                    this.props.isFetching\r\n                        ? <Preloader/>\r\n                        : <Users\r\n                            users={this.props.users}\r\n                            followUser={this.onFollowUser}\r\n                            unfollowUser={this.onUnfollowUser}\r\n                        />\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCurrentPage,\r\n    getUsers,\r\n    follow,\r\n    unfollow,\r\n})(UsersContainer)","import React from 'react'\r\nimport s from './UserInfo.module.css'\r\nimport {ProfileType} from '../../../redux/profile-reducer'\r\nimport avatar from '../../../assets/images/user.jpg'\r\n\r\ntype UserInfoPropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\nexport const UserInfo: React.FC<UserInfoPropsType> = ({profile}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={s.background}>\r\n                <img\r\n                    src=\"https://images.unsplash.com/photo-1613379293095-d81837c1502d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&q=80\"\r\n                    alt=\"profile background\"/>\r\n            </div>\r\n            <div className={s.container}>\r\n                <div className={s.avatar}>\r\n                    <img\r\n                        src={profile.photos.small || avatar}\r\n                        alt={profile.fullName}/>\r\n                </div>\r\n                <div className={s.body}>\r\n                    <div className={s.username}>\r\n                        {profile.fullName}\r\n                    </div>\r\n                    <div className={s.birthday}>\r\n                        {profile.lookingForAJob}\r\n                    </div>\r\n                    <div className={s.address}>\r\n                        {profile.lookingForAJobDescription}\r\n                    </div>\r\n                    <div className={s.about}>\r\n                        {profile.aboutMe}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","import {Dispatch} from 'redux'\r\nimport {profileAPI} from '../api/api'\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string | null\r\n    contacts: {\r\n        facebook: string | null\r\n        website: string | null\r\n        vk: string | null\r\n        twitter: string | null\r\n        instagram: string | null\r\n        youtube: string | null\r\n        github: string | null\r\n        mainLink: string | null\r\n    },\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n    lastSeen: number\r\n    comment: string\r\n    likeCounter: number\r\n    shareCounter: number\r\n}\r\nexport type ProfilePageType = typeof initialState\r\n\r\nconst initialState = {\r\n    profile: {\r\n        'aboutMe': 'я круто чувак 1001%',\r\n        'contacts': {\r\n            'facebook': 'facebook.com',\r\n            'website': null,\r\n            'vk': 'vk.com/dimych',\r\n            'twitter': 'https://twitter.com/@sdf',\r\n            'instagram': 'instagra.com/sds',\r\n            'youtube': null,\r\n            'github': 'github.com',\r\n            'mainLink': null\r\n        },\r\n        'lookingForAJob': true,\r\n        'lookingForAJobDescription': 'не ищу, а дурачусь',\r\n        'fullName': 'samurai dimych',\r\n        'userId': 2,\r\n        'photos': {\r\n            'small': 'https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0',\r\n            'large': 'https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0'\r\n        }\r\n    } as ProfileType,\r\n    newPostText: '',\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            avatar: 'https://images.generated.photos/8HvfbgpUo0GD5FBOHMDk7LOvFB_wKaSmG5DzRfd6nMs/rs:fit:256:256/czM6Ly9pY29uczgu/Z3Bob3Rvcy1wcm9k/LnBob3Rvcy8wNTQ0/MDY0LmpwZw.jpg',\r\n            name: 'Erik Jhonson',\r\n            lastSeen: 15,\r\n            comment: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur consequuntur dolorem error inventore iste labore laborum optio perspiciatis praesentium vel. Esse, fuga libero maiores optio pariatur perspiciatis, possimus quia sit tempora, voluptate voluptates voluptatum. Aliquid aperiam atque dignissimos doloremque in iste iusto numquam odio praesentium, quod sed sunt vitae? Aliquam commodi placeat ratione recusandae suscipit temporibus voluptates! A ab aliquid at autem doloribus earum enim esse eum in itaque magni maiores nisi odit quo rem, repudiandae sed sequi similique suscipit totam. Adipisci corporis debitis ea eaque est, eveniet illum minus omnis porro quia, quibusdam repellat saepe sed tempore, unde voluptatum.',\r\n            likeCounter: 324,\r\n            shareCounter: 98\r\n        },\r\n        {\r\n            id: 2,\r\n            avatar: 'https://images.generated.photos/8HvfbgpUo0GD5FBOHMDk7LOvFB_wKaSmG5DzRfd6nMs/rs:fit:256:256/czM6Ly9pY29uczgu/Z3Bob3Rvcy1wcm9k/LnBob3Rvcy8wNTQ0/MDY0LmpwZw.jpg',\r\n            name: 'Erik Jhonson',\r\n            lastSeen: 36,\r\n            comment: 'Amet, lectus sodales accumsan sed sit faucibus. Leo, est. Justo amet hac tempus sed sed sapien sed luctus vitae imperdiet amet non molestie dui ex. Dui quam, tempus eleifend dictum. Libero, urna amet, faucibus. Amet, quis, dui sapien interdum non tortor, efficitur mattis ut. Non in lectus vestibulum augue sodales sodales mauris eget odio. Mattis in integer nunc quis, sit amet, et integer vulputate amet, mattis platea interdum urna urna amet, non aenean odio. Sed elit. Non lectus nec in et ipsum orci, ornare interdum elit. Hac odio. In amet dui est. Non urna hac vitae lorem faucibus. Efficitur cursu.',\r\n            likeCounter: 15,\r\n            shareCounter: 2\r\n        }\r\n    ] as PostType[]\r\n}\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [\r\n                    {\r\n                        id: new Date().getTime(),\r\n                        avatar: 'https://images.generated.photos/8HvfbgpUo0GD5FBOHMDk7LOvFB_wKaSmG5DzRfd6nMs/rs:fit:256:256/czM6Ly9pY29uczgu/Z3Bob3Rvcy1wcm9k/LnBob3Rvcy8wNTQ0/MDY0LmpwZw.jpg',\r\n                        name: 'Erik Jhonson',\r\n                        lastSeen: 0,\r\n                        comment: state.newPostText,\r\n                        likeCounter: 0,\r\n                        shareCounter: 0\r\n                    },\r\n                    ...state.posts\r\n                ]\r\n            }\r\n        case 'UPDATE-NEW-POST-TEXT':\r\n            return {...state, newPostText: action.newText}\r\n        case 'SET-USER-PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof addPost>\r\n    | ReturnType<typeof updateNewPostText>\r\n    | ReturnType<typeof setUserProfile>\r\n\r\nexport const addPost = () => {\r\n    return {\r\n        type: 'ADD-POST'\r\n    } as const\r\n}\r\n\r\nexport const updateNewPostText = (newText: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-POST-TEXT',\r\n        newText\r\n    } as const\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: 'SET-USER-PROFILE',\r\n        profile,\r\n    } as const\r\n}\r\n\r\nexport const getUserProfile = (userId: string) => (dispatch: Dispatch) => {\r\n    profileAPI\r\n        .getUserProfile(userId)\r\n        .then(data => {\r\n            dispatch(setUserProfile(data))\r\n        })\r\n}\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport s from './Post.module.css'\r\nimport {PostType} from '../../../../redux/profile-reducer'\r\n\r\ntype PostPropsType = {\r\n    data: PostType\r\n}\r\n\r\nexport const Post: React.FC<PostPropsType> = ({data}) => {\r\n    return (\r\n        <div className={s.alt_message}>\r\n            <div className={s.container}>\r\n                <div className={s.top}>\r\n                    <div className={s.avatar}>\r\n                        <img src={data.avatar} alt=\"avatar\"/>\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <h4>{data.name}</h4>\r\n                        <p>{data.lastSeen} min ago</p>\r\n                    </div>\r\n                </div>\r\n                <div className={s.body}>\r\n                    <p className={s.comment}>\r\n                        {data.comment}\r\n                    </p>\r\n                    <div className={s.testimonials}>\r\n                        <div className={s.item}>\r\n                            <button className={'btn'}>Like</button>\r\n                            <p>{data.likeCounter} people liked this</p>\r\n                        </div>\r\n                        <div className={s.item}>\r\n                            <button className={'btn'}>Share</button>\r\n                            <p>{data.shareCounter} shared your post</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {addPost, ProfilePageType, updateNewPostText} from '../../../redux/profile-reducer'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../../redux/store'\r\nimport {MyPost} from './MyPost'\r\n\r\ntype MapStatePropsType = {\r\n    data: ProfilePageType\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        data: state.profilePage\r\n    }\r\n}\r\n\r\nexport const MyPostContainer = connect(mapStateToProps, {\r\n    addPost,\r\n    updateNewPostText,\r\n})(MyPost)","import React from 'react'\r\nimport {Post} from './Post/Post'\r\nimport {ProfilePageType} from '../../../redux/profile-reducer'\r\nimport {AddItemForm} from '../../common/AddItemForm/AddItemForm'\r\n\r\ntype MyPostPropsType = {\r\n    data: ProfilePageType\r\n    addPost: () => void\r\n    updateNewPostText: (text: string) => void\r\n}\r\n\r\nexport const MyPost: React.FC<MyPostPropsType> = ({data, addPost, updateNewPostText}) => {\r\n\r\n    const postsElements = data.posts.map(p => (\r\n        <Post key={p.id} data={p}/>)\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <AddItemForm\r\n                value={data.newPostText}\r\n                addItem={addPost}\r\n                updateText={updateNewPostText}>Add post</AddItemForm>\r\n            {postsElements}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {UserInfo} from './UserInfo/UserInfo'\r\nimport {MyPostContainer} from './MyPosts/MyPostContainer'\r\nimport {ProfileType} from '../../redux/profile-reducer'\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = ({profile}) => {\r\n    return (\r\n        <>\r\n            <UserInfo profile={profile}/>\r\n\r\n            <MyPostContainer/>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Profile} from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../redux/store'\r\nimport {getUserProfile, ProfileType} from '../../redux/profile-reducer'\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom'\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n}\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype ProfileContainerType = MapStatePropsType & MapDispatchPropsType\r\ntype CommonPropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\r\n\r\nclass ProfileContainer extends React.Component<CommonPropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        this.props.getUserProfile(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile\r\n})\r\n\r\nconst WithUrlDataContainer = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainer)","import {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Settings} from './components/Settings/Settings'\r\nimport React from 'react'\r\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer'\r\nimport UsersContainer from './components/Users/UsersContainer'\r\nimport ProfileContainer from './components/Profile/ProfileContainer'\r\n\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={'/'} exact render={() => <Redirect to={'/profile:userId'}/>}/>\r\n            <Route path={'/profile/:userId'} render={() => <ProfileContainer/>}/>\r\n            <Route path={'/dialogs'} render={() => <DialogsContainer/>}/>\r\n            <Route path={'/users'} render={() => <UsersContainer/>}/>\r\n            <Route path={'/settings'} render={() => <Settings/>}/>\r\n        </Switch>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <header className={s.body}>\r\n            <div className={s.logo}>\r\n                <img src=\"https://placeimg.com/100/100/tech\" alt=\"logo\"/>\r\n            </div>\r\n            <div>\r\n                {\r\n                    props.isAuth\r\n                        ? <span className={s.login}>{props.login}</span>\r\n                        : <NavLink to={'/login'} className={'btn-login'}>login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {Dispatch} from 'redux'\r\nimport {authAPI} from '../api/api'\r\n\r\nexport type AuthResponseType = {\r\n    id: number | null\r\n    login: string | null\r\n    email: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setAuthUserData>\r\n\r\nconst initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n} as AuthResponseType\r\n\r\nconst authReducer = (state: AuthResponseType = initialState, action: ActionsType): AuthResponseType => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id: number, login: string, email: string) => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        data: {\r\n            id,\r\n            login,\r\n            email,\r\n        },\r\n    } as const\r\n}\r\n\r\nexport const authUserData = () => (dispatch: Dispatch) => {\r\n    authAPI\r\n        .authMe()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                const {id, login, email} = data.data\r\n                dispatch(setAuthUserData(id, login, email))\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport {Header} from './Header'\r\nimport {AppStateType} from '../../redux/store'\r\nimport {authUserData} from '../../redux/auth-reducer'\r\nimport {connect} from 'react-redux'\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    authUserData: () => void\r\n}\r\n\r\ntype HeaderContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.authUserData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {authUserData})(HeaderContainer)","import React from 'react'\r\nimport './App.css'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {SideBar} from './components/Sidebar/SideBar'\r\nimport {Footer} from './components/Footer/Footer'\r\nimport {Routes} from './Routes'\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"page\">\r\n                <HeaderContainer/>\r\n                <SideBar/>\r\n                <main className={'content'}>\r\n                    <Routes/>\r\n                </main>\r\n                <Footer/>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App","export type FriendType = {\r\n    id: number\r\n    avatar: string\r\n    firstName: string\r\n    lastName: string\r\n}\r\nexport type SideBarType = typeof initialState\r\n\r\nconst initialState = {\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            avatar: 'https://imgproxy.generated.photos/DAdtlihSCyxITsXjf3_1k54Ueyq3FJYnxQiiqXinCF0/rs:fit:512:512/wm:0.95:sowe:18:18:0.33/czM6Ly9pY29uczgu/Z3Bob3Rvcy1wcm9k/LnBob3Rvcy90cmFu/c3BhcmVudF92My92/M18wNTQzNzAzLnBu/Zw.png',\r\n            firstName: 'Natsuki',\r\n            lastName: 'Minako',\r\n        },\r\n        {\r\n            id: 2,\r\n            avatar: 'https://imgproxy.generated.photos/sk_shJ-TA6ctVuqGtL7M_TkH5ACrWQ7CYr9GcPnQHS0/rs:fit:512:512/wm:0.95:sowe:18:18:0.33/czM6Ly9pY29uczgu/Z3Bob3Rvcy1wcm9k/LnBob3Rvcy90cmFu/c3BhcmVudF92My92/M18wNTYyMDg0LnBu/Zw.png',\r\n            firstName: 'Bryan',\r\n            lastName: 'O\\'Ryan'\r\n        },\r\n        {\r\n            id: 3,\r\n            avatar: 'https://images.generated.photos/kz5RXoqT5RQbMcwPce2BB61EmJeCgg_nnSYufYvII-0/rs:fit:512:512/wm:0.95:sowe:18:18:0.33/czM6Ly9pY29uczgu/Z3Bob3Rvcy1wcm9k/LnBob3Rvcy92M18w/MjgzNTA0LmpwZw.jpg',\r\n            firstName: 'Albert',\r\n            lastName: 'Herrera'\r\n        }\r\n    ] as FriendType[]\r\n}\r\n\r\nconst sidebarReducer = (state: SideBarType = initialState) => {\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport sidebarReducer from './sidebar-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n})\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store\r\n\r\n// @ts-ignore\r\nwindow.store = store","import './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport ReactDOM from 'react-dom'\r\nimport React from 'react'\r\nimport App from './App'\r\nimport store from './redux/store'\r\nimport {Provider} from 'react-redux'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()"],"sourceRoot":""}